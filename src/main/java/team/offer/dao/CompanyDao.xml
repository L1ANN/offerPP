<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.offer.dao.CompanyDao">
    <!--companyMap-->
    <!--<resultMap id="companyMap" type="team.offer.entity.Company">-->
        <!--<id property="pkComId" column="pk_com_id"/>-->
        <!--<result property="comNo" column="com_no"/>-->
        <!--<result property="comEmail" column="com_email"/>-->
        <!--<result property="comPassword" column="com_password"/>-->
        <!--<result property="comName" column="com_name"/>-->
        <!--<result property="comIndustry" column="com_industry"/>-->
        <!--<result property="comLocation" column="com_location"/>-->
        <!--<result property="comSize" column="com_size"/>-->
        <!--<result property="comLegalperson" column="com_legalperson"/>-->
        <!--<result property="comIntro" column="com_intro"/>-->
        <!--<result property="comContact" column="com_contact"/>-->
        <!--<result property="comPostlimit" column="com_postlimit"/>-->
        <!--<result property="comPass" column="com_pass"/>-->
    <!--</resultMap>-->


    <sql id="companyCols">
        com_no,
        com_email,
        com_password,
        com_name,
        com_industry,
        com_location,
        com_size,
        com_legalperson,
        com_intro,
        com_contact,
        com_postlimit,
        com_pass
    </sql>

    <sql id="userCols">
        user.pk_user_id,
        user.user_email,
        user.user_password,
        user.user_icon,
        user.user_name,
        user.user_phone,
        user.user_age,
        user.user_address_country,
        user.user_address_city,
        user.user_direction,
        user.user_station,
        user.user_experience,
        user.user_skill,
        user.user_work_address,
        user.user_education,
        user.user_work_experience,
        user.user_introduction,
        user.user_edu_experience,
        user.user_top
    </sql>

    <sql id="applicationCols">
        pk_apply_id,
        user_id,
        position_id,
        application_status
    </sql>



    <!--增加新公司-->
    <insert id="insertCompany" parameterType="company">
        insert into company (
        <include refid="companyCols"/>
        )
        values
        (
        #{company.comNo},
        #{company.comEmail},
        #{company.comPassword},
        #{company.comName},
        #{company.comIndustry},
        #{company.comLocation},
        #{company.comSize},
        #{company.comLegalperson},
        #{company.comIntro},
        #{company.comContact},
        10,
        0
        );
    </insert>

    <!--根据id获取单个公司-->
    <select id="getCompanyById" parameterType="int"
            resultType="team.offer.entity.Company">
        select
        pk_com_id,
        <include refid="companyCols"/>
        from company
        where pk_com_id=#{pkComId}
    </select>

    <!--根据email获取单个公司-->
    <select id="getCompanyByEmail" parameterType="string"
            resultType="team.offer.entity.Company">
        select
        pk_com_id,
        <include refid="companyCols"/>
        from company
        where com_email=#{comEmail}
    </select>


    <!--获取所有公司列表-->
    <select id="getCompanyList" resultType="team.offer.entity.Company">
        SELECT
        pk_com_id,
        <include refid="companyCols"/>
        FROM company
    </select>

    <!--修改公司密码-->
    <update id="updateCompany" parameterType="company">
        UPDATE company
        SET com_password=#{company.comPassword}
        WHERE pk_com_id=#{company.pkComId}
    </update>

    <!--根据positionID查询简历-->
    <select id="getResumes" parameterType="int" resultType="team.offer.entity.User">
        select
        <include refid="userCols"/>
        from user
        RIGHT join application ON user.pk_user_id=application.user_id
        WHERE application.position_id=#{pkPositionId} AND application_status=0
    </select>

    <!--根据userid查询简历详情-->
    <select id="getResumeDetails" parameterType="int" resultType="team.offer.entity.User">
        select
        <include refid="userCols"/>
        from user
        where pk_user_id=#{pkUserId}
    </select>

    <!--根据userid设置简历状态-->
    <update id="updateResumeById">
        update application
        set application_status=#{applicationStatus}
        where user_id=#{userId} and position_id=#{pid}
    </update>

    <!--根据userid查询简历状态-->
    <select id="getApplicationStatusById" parameterType="int" resultType="int">
        select application_status
        from application
        where user_id=#{userId} and position_id=#{pid}
    </select>

    <sql id="positionCols">
        com_id,
        position_name,
        position_property,
        position_place,
        position_education,
        position_experiment,
        position_salary,
        position_welfare,
        position_introduction,
        position_skill,
        position_address
    </sql>

    <!--增加新职位-->
    <insert id="insertPosition" parameterType="position"
    useGeneratedKeys="true" keyProperty="pkPositionId">
        insert into position
        (
        <include refid="positionCols"/>
        )
        values (
        #{comId},
        #{positionName},
        #{positionProperty},
        #{positionPlace},
        #{positionEducation},
        #{positionExperiment},
        #{positionSalary},
        #{positionWelfare},
        #{positionIntroduction},
        #{positionSkill},
        #{positionAddress}
        )
    </insert>

    <!--根据企业id查询职位集合-->
    <select id="queryPositionByComId" parameterType="int" resultType="team.offer.entity.Position">
        SELECT
        pk_position_id,
        <include refid="positionCols"/>
        from position
        where com_id=#{comId}
    </select>

    <!---根据职位id删除职位-->
    <delete id="deletePositionById" parameterType="int">
        delete FROM
        position
        where pk_position_id=#{pkPositionId}
    </delete>

    <!--根据职位id删除申请-->
    <delete id="deleteApplicationByPositionId" parameterType="int">
        DELETE FROM
        application
        WHERE position_id=#{positionId}
    </delete>

    <!--完善公司信息-->
    <update id="completeCompany" parameterType="company">
        update company
        SET
        com_industry =#{company.comIndustry},
        com_location =#{company.comLocation},
        com_size =#{company.comSize},
        com_contact=#{company.comContact},
        com_intro=#{company.comIntro}
        where pk_com_id=#{company.pkComId}
    </update>
</mapper>